; Write your own version of length using the list functions we have discussed.  You can find
; length documented at http://www.schemers.org/Documents/Standards/R5RS/

; The idea is suggested by (my-length '(a b c d)) = 4.

; Recursive
(define (my-length-recur lst)
  (cond ((null? lst) 0)
        (else (+ 1 (my-length (cdr lst))))))

; Iterative
(define (my-length-iter lst)
  (iter-helper lst 0))

(define (iter-helper lst-remaining length-so-far)
  (cond ((null? lst-remaining) length-so-far)
        (else (iter-helper (cdr lst-remaining) (+ length-so-far 1)))))